sudo: false

language: cpp

matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          packages:
            - liblapack-dev
            - libblas-dev
            - valgrind
      cache:
        directories:
          - $TRAVIS_BUILD_DIR/extern/metis
          - $TRAVIS_BUILD_DIR/extern/SuiteSparse
          - $TRAVIS_BUILD_DIR/extern/mpich
          - $TRAVIS_BUILD_DIR/extern/hypre
          - $TRAVIS_BUILD_DIR/valgrind
    - os: osx
      compiler: gcc
      addons:
        apt:
          packages:
            - liblapack-dev
            - libblas-dev
            - valgrind
      cache:
        directories:
          - $TRAVIS_BUILD_DIR/extern/metis
          - $TRAVIS_BUILD_DIR/extern/SuiteSparse
          - $TRAVIS_BUILD_DIR/extern/mpich
          - $TRAVIS_BUILD_DIR/extern/hypre
          - $TRAVIS_BUILD_DIR/valgrind
    - os: osx
      compiler: clang
      addons:
        apt:
          packages:
            - liblapack-dev
            - libblas-dev
            - valgrind
      cache:
        directories:
          - $TRAVIS_BUILD_DIR/extern/metis
          - $TRAVIS_BUILD_DIR/extern/SuiteSparse
          - $TRAVIS_BUILD_DIR/extern/mpich
          - $TRAVIS_BUILD_DIR/extern/hypre
          - $TRAVIS_BUILD_DIR/valgrind

install:
    - if [ ! -e extern/metis/lib/libmetis.a ]; then
        sh config/build_scripts/build_metis.sh;
     else
        echo "Reusing cached metis";
     fi;

    - if [ ! -e extern/SuiteSparse/lib/libumfpack.so ]; then
        sh config/build_scripts/build_suitesparse.sh;
     else
        echo "Reusing cached SuiteSparse-4.5.4";
     fi;

    - if [ ! -e extern/mpich/bin/mpirun ]; then
        sh config/build_scripts/build_mpich.sh;
        export PATH=$TRAVIS_BUILD_DIR/extern/mpich/bin:$PATH;
     else
        export PATH=$TRAVIS_BUILD_DIR/extern/mpich/bin:$PATH;
        echo "Reusing cached mpich";
     fi;

    - if [ ! -e extern/hypre/lib/libHYPRE.a ]; then
        sh config/build_scripts/build_hypre.sh;
     else
        echo "Reusing cached hypre-2.10.0b";
     fi;

    - sh config/build_scripts/build_linalg.sh;

    - if [ ! -e $TRAVIS_BUILD_DIR/valgrind/bin/valgrind ]; then
        cd $TRAVIS_BUILD_DIR;
        wget ftp://sourceware.org/pub/valgrind/valgrind-3.13.0.tar.bz2;
        tar -xvf valgrind-3.13.0.tar.bz2;
        cd valgrind-3.13.0;
        ./configure --prefix=$TRAVIS_BUILD_DIR/valgrind;
        make;
        make install;
        ls $TRAVIS_BUILD_DIR/valgrind;
        export PATH=$TRAVIS_BUILD_DIR/valgrind/bin:$PATH;
        which valgrind;
     else
        export PATH=$TRAVIS_BUILD_DIR/valgrind/bin:$PATH;
        echo "Reusing cached valgrind";
     fi;


script:
   - cd $TRAVIS_BUILD_DIR;

   # Build the library
   - sh config/extern_build.sh;

   # Run tests
   - cd build/examples;
   - valgrind --leak-check=full --track-origins=yes ./generalgraph;

    #- cd build;
    #- CTEST_OUTPUT_ON_FAILURE=1 make test;
